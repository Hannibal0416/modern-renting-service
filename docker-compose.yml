# Redis, Kafka, zooKeeper, Nginx
version: '3'

networks:
  proxy:
    driver: bridge
  backend:
    driver: bridge
  db:
    driver: bridge

services:
  postgres:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - type: bind
        source: ./create_database.sql
        target: /docker-entrypoint-initdb.d/create_database.sql
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 20s
      timeout: 3s
      retries: 3
    networks:
      - db

  nginx:
    restart: always
    build: ./nginx
    ports:
      - "8080:80"
    networks:
      - proxy
      - backend
    depends_on:
      user:
        condition: service_started
      oauth2:
        condition: service_started
      vehicle:
        condition: service_started

  user:
    build: ./user-service
    # restart: always
    depends_on:
      postgres:
        condition: service_healthy
      oauth2:
        condition: service_started
    networks:
      - db
      - backend

  oauth2:
    build: ./oauth2
    # restart: always
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - db
      - backend

  vehicle:
    build: ./vehicle-service
    # restart: always
    depends_on:
      postgres:
        condition: service_healthy
      oauth2:
        condition: service_started
    networks:
      - db
      - backend
